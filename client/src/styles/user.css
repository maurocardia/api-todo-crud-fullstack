* {
  box-sizing: border-box;
  padding: 0%;
  margin: 0%;
}

.containerBanner {
  height: 25vh;
}

.containerCharacterPage {
  padding-top: 4rem;
}

span {
  font-weight: 650;
}

.banner {
  background-image: url("../images/image2.svg");
  background-repeat: no-repeat;
  background-size: contain;
  width: 100vw;
  height: 100%;
  background-position: center;
  background-color: black;
}

.controlBar {
  text-align: center;
}

.selectPersonaje {
  width: 20vw;
  height: 2rem;
  min-width: 5rem;
  padding: 0.1rem;
  border-style: none;
  background-color: transparent;
  color: rgb(255, 255, 255);
  box-shadow: 0px, 3px, 6px grey;
  outline: none;
  font-weight: 600;
  display: flex;
  justify-content: center;
  align-items: center;
  border-left-style: solid;
  border-width: 0.5px;
  transition: 400ms;
}

.selectPersonaje:hover {
  transition: 400ms;
  color: gray;

  box-shadow: 0px, 3px, 4px grey;
  color: rgb(128, 128, 128);
  text-shadow: 0px 0 3px;
}

.containerCharacter {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  justify-content: space-between;
  grid-column-gap: 1rem;
  grid-row-gap: 3rem;
  padding: 2rem;
  cursor: pointer;
}

.character > img {
  width: 100%;
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
}

.character {
  background-color: rgb(0, 0, 0);
  margin-right: 0.5rem;
  margin-bottom: 0.5rem;
  border-radius: 0.5rem;
  color: white;
  box-shadow: 0 6px 10px rgba(128, 128, 128, 0.934);
  position: relative;
}

.character > h5 {
  margin-top: 1rem;
  color: white;
  text-align: center;
}

.containerCharacterPage {
  background-color: rgb(3, 1, 35);
  height: 100%;
}

.statusDead {
  width: 0.8rem;
  height: 0.8rem;
  background-color: red;
  border-radius: 50%;
  margin-left: 1rem;
}

.statusAlived {
  width: 0.8rem;
  height: 0.8rem;
  background-color: green;
  margin-left: 1rem;
  border-radius: 50%;
}

.statusUnknown {
  width: 0.8rem;
  height: 0.8rem;
  background-color: rgb(109, 109, 109);
  margin-left: 1rem;
  border-radius: 50%;
}
.containerStatus {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 2.5rem;
}
p {
  margin: 0;
}

.buttonFavorite {
  height: 2rem;
  width: 1vw;
  position: absolute;
  left: 1rem;
  top: 0px;
}
.buttonFavorite > h1 {
  color: rgb(255, 255, 255);
  font-size: 2vw;
  bottom: 15rem;
  left: 1rem;
  filter: drop-shadow(3px 5px 6px rgb(0 0 0 / 0.4));
}

.secondBar {
  display: flex;
  justify-content: space-around;
  align-items: center;
  margin: 0 1rem;
  margin-top: 1rem;

  border-width: 0.5px;
  border-color: gray;
  display: flex;
  align-items: center;
  padding: 0 1rem;
}
.userInSession {
  margin-left: 0.5rem;
  display: flex;
  align-items: center;
  color: white;
}

.user {
  display: flex;
  position: absolute;
  left: 5px;
  top: 2.8rem;
}

.todosText {
  color: white;
  font-weight: 600;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: 500ms;
}

.todosText:hover {
  color: gray;
  text-shadow: 1px 1px 2px rgba(128, 128, 128, 0.749);
}
.todosText > span {
  margin-left: 0.5rem;
  font-weight: 650;
}

.userIcon {
  box-shadow: 0 3px 6px gray;
  border-radius: 50%;
  height: 2.1rem;
  width: 2.1rem;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: 200ms;
}

.userIcon:hover {
  transform: rotate(360deg) scale(1.1);
}

.buttonEdit {
  background-color: transparent;
  color: rgb(255, 255, 255);
  font-weight: 600;
  border-style: none;
  outline: none;
  border-color: transparent;
  transition: 400ms;
}

.buttonEdit:focus {
  outline-color: transparent;
  outline-style: none;
}

.selectPersonaje:focus {
  outline-color: transparent;
  outline-style: none;
}

.buttonEdit:hover {
  background-color: transparent;
  color: rgb(0, 0, 0);
  color: rgb(128, 128, 128);
  text-shadow: 0px 0 3px;
}

.buttonFavorite > h1:hover {
  color: red;
}

.buttonRigth {
  border-right-style: solid;
  border-width: 0.5px;
}
@media screen and (max-width: 866px) {
  .containerCharacter {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    justify-content: space-between;
    grid-column-gap: 1rem;
    grid-row-gap: 3rem;
    padding: 2rem;
  }

  .userIcon {
    height: 1.6rem;
    width: 1.6rem;
  }
}

@media only screen and (max-width: 700px) and (min-width: 200px) {
  .containerCharacter {
    grid-template-columns: 1fr 1fr;
  }
  .containerUser {
    text-align: center;
  }
  .userIcon {
    height: 1.2rem;
    width: 1.2rem;
  }
}
